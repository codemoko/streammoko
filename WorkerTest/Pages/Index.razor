@page "/"
@using System.Text

@if (CloudflareImages != null)
{@*
    <Slider Slide="(new Objects.SliderObj(CloudflareImages))" />*@
}
@*<DropRule />*@

@code {
    public CloudflareImagePage[] CloudflareImages { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var tokenResult = await TokenProvider.RequestAccessToken(new AccessTokenRequestOptions { Scopes = new List<string> { "openid", "profile" } });
        tokenResult.TryGetToken(out var token);
        if (!string.IsNullOrEmpty(token?.Value))
        {
            var host = this.Http.BaseAddress.Host.Contains("localhost") ? "http://localhost:7071" : "https://mokowebhooks.azurewebsites.net";
            var target = $"{host}/api/MokoWebHooks"; //dev
            try
            {
                var responseBody = JsonConvert.SerializeObject(new { Token = token.Value, MokoCommand = "IMGS" });
                var byteContent = new ByteArrayContent(Encoding.UTF8.GetBytes(responseBody));
                HttpResponseMessage reponse = await Http.PostAsync(target, byteContent);
                var responseStr = await new StreamReader(reponse.Content.ReadAsStream()).ReadToEndAsync();
                CloudflareImages = JsonConvert.DeserializeObject<CloudflareImagePage[]>(responseStr);
                StateHasChanged();
            }
            catch (Exception ex)
            {
                var exMess = ex.Message;
            }
        }
    }
}